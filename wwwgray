#!/usr/bin/env ruby

require 'net/http'

def port_open?(port)
  !system("lsof -i:#{port}", out: '/dev/null')
end

is_parent = true
$log = open("#{ENV['HOME']}/.junk/gray.log", 'a')

if port_open? 4567
  puts "Starting new server..."
  pid = Process.fork
  if pid.nil?
    is_parent = false

    require 'sinatra'
 
    $stderr.reopen(File.new("#{ENV['HOME']}/.junk/wwwgray_err", 'w'))
    $stdout.reopen(File.new("#{ENV['HOME']}/.junk/wwwgray_out", 'w'))
    $path = nil

    get %r{/(.+)} do |file|
      send_file file
    end

    get '/' do
      if $path
        `gray generate html #{$path}`
      else
        'n/a'
      end
    end

    put %r{(/.*)} do |file|
      $path = file
      $log.puts "SERVER: now serving #{$path}"
      $log.flush
      Dir.chdir(File.dirname($path))
      $path = File.basename($path)
    end
  else
    # Let parent process release child.
    while port_open? 4567
      sleep(1)
    end
    Process.detach(pid)
  end
else
  puts 'Redirecting existing server...'
end

if is_parent && ARGV.size > 0
  path = ARGV[0]
  $log.puts "CLIENT: requesting #{path}"
  $log.flush
  http = Net::HTTP.new('localhost', 4567)
  response = http.send_request('PUT', File.absolute_path(path), '')
end
